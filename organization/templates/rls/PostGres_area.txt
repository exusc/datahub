{# Description of template language: https://docs.djangoproject.com/en/5.1/ref/templates/language/ #}
{% with app=area.application %}
-- RLS Script   : PostGres_area 
-- generated at : {{time}} 
-- Application  : '{{app}}' ({{app.desc}})
-- Area         : '{{area.key}}' ({{area.desc}})
-- Database     : name={{db_name}} 
--                host={{db_host}}
--                schema={{area.schematables}}

-- RLS is controlled by following Business Unit Types via environment variables (envvar) in database:
{% if app.bu1_type %}--    {{app.bu1_type}} (columns={{app.bu1_field}}) (envvar={{app|lower}}.{{app.bu1_field|lower}}){% endif %}
{% if app.bu2_type %}--    {{app.bu2_type}} (columns={{app.bu2_field}}) (envvar={{app|lower}}.{{app.bu2_field|lower}}){% endif %}
{% if app.bu3_type %}--    {{app.bu3_type}} (columns={{app.bu3_field}}) (envvar={{app|lower}}.{{app.bu3_field|lower}}){% endif %}

-- ======================================================================================
-- Application Level - Schema '{{area.application|lower}}'
-- ======================================================================================
-- For RLS a schema is needed on application level. 
-- Content of this schema:
- Table 'user2scope' to define which user is allowed to use which scope.
CREATE TABLE {{app|lower}}.user2scope (
    user VARCHAR(255),
    scope VARCHAR(255)
);
-- For each scope a setscope function is needed to set environment variables according to business unit values
{% for scope in area.areascope_set.all %} 
create funtion {{app|lower}}.set_{{scope.script_name}}
    if (user,scope) is in table {{app|lower}}.user2scope:
        set {{app|lower}}.{{app.bu1_field|lower}} = {{scope.bu1_value}};      
{% if app.bu2_type %}        set {{app|lower}}.{{app.bu2_field|lower}} = {{scope.bu2_value|default:'*'}}; {% endif %}
        print ('scope {{scope.script_name}} setted');
    else:
        print ('scope {{scope.script_name}} not allowed for user ');

{% endfor %}
--

-- Create role for read access - used by report generator and direct access users
CREATE ROLE {{app|lower}}_read_only WITH LOGIN PASSWORD 'was auch immer';


-- ======================================================================================
-- Area Level - Schema={{area.schematables}}
-- ======================================================================================
-- Needed for RLS on area level: Schema '{{area.schematables}}'
-- for each table containing a column {{app.bu1_field}} {% if app.bu2_type %}or {{app.bu2_field}}{% endif %} RLS must be enabled.
ALTER TABLE table ENABLE ROW LEVEL SECURITY;
{% if app.bu1_type %}
-- for each table containing a column {{app.bu1_field}} 
CREATE POLICY {{app.bu1_field|lower}} ON table FOR read? TO {{app|lower}}_read_only USING (
    (current_setting({{app|lower}}.{{app.bu1_field}}, false)::text = '*')
    or
    ({{app.bu1_field}} = current_setting({{app|lower}}.{{app.bu1_field}}, false)::text)
);
{% endif %}
{% if app.bu2_type %}
-- for each table containing a column {{app.bu2_field}} 
CREATE POLICY {{app.bu2_field|lower}} ON table FOR read? TO {{app}}_read_only USING (
    (current_setting({{app|lower}}.{{app.bu2_field}}, false)::text = '*')
    or
    ({{app.bu2_field}} = current_setting({{app|lower}}.{{app.bu2_field}}, false)::text)
);
{% endif %}

-- ======================================================================================
-- Needed for Direct Access: Database Level
-- ======================================================================================
-- 1. Installed Login Hook
-- 2. Information about last used scope of user 
-- 3. Login Hook must set scope

-- ======================================================================================

{% endwith %}

To check
- No sure if policy names must be different from tyble names
- Check explain if *-notation and or in policy is a performant implementation
- Does it work with distributed tables within citus?
- What happens if column in rule dosn't exist?
- If we have two rules does it work like expected: connacted as an AND?
- What happens if a envvar is not defined?
- Min and max values are needed fro Schutzstufen at igs
- Type is needed

-- ======================================================================================
Sample PlSql - to be testet because of local usage in explain
https://github.com/citusdata/citus/issues/7415
create extension citus;
-- Create the test user
CREATE ROLE myuser WITH LOGIN PASSWORD 'ciao';
-- Create the table
CREATE TABLE products (
    id SERIAL,
    tenant_id INT,
    name VARCHAR(255)
);
-- Insert data
INSERT INTO products (tenant_id, name)
VALUES (1, 'Product A1'),
    (1, 'Product A2'),
    (2, 'Product B1'),
    (2, 'Product B2');
-- Distribute the table
select create_distributed_table('products', 'tenant_id');
-- Add privileges to test user
GRANT ALL PRIVILEGES ON "products" to myuser;
-- Create the policy
ALTER TABLE products ENABLE ROW LEVEL SECURITY;
CREATE POLICY tenant_isolation_policy ON products FOR ALL TO myuser USING (
    tenant_id = current_setting('app.tenant_id', false)::integer
);

BEGIN;
set citus.propagate_set_commands = 'local';
set local app.tenant_id = '1';
SELECT * FROM "products";
EXPLAIN ANALYZE SELECT * FROM "products";
-- ======================================================================================
