# Generated by Django 5.0.3 on 2024-06-20 10:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('organization', '0009_user_scopes_alter_application_database_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='database',
            name='scope_function',
            field=models.CharField(blank=True, help_text='Function used to add a scope to database', max_length=80, null=True, verbose_name='scope_function'),
        ),
        migrations.AlterField(
            model_name='area',
            name='database',
            field=models.ForeignKey(blank=True, help_text='If database is not specified, default from application is used', null=True, on_delete=django.db.models.deletion.PROTECT, to='organization.database'),
        ),
        migrations.AlterField(
            model_name='database',
            name='client',
            field=models.ForeignKey(blank=True, help_text='Defines ownership of database', null=True, on_delete=django.db.models.deletion.PROTECT, to='organization.client'),
        ),
        migrations.AlterField(
            model_name='database',
            name='database_type',
            field=models.CharField(choices=[('PG', 'PostgreSQL'), ('CH', 'Clickhouse'), ('MD', 'MariaDB'), ('MS', 'MySQL'), ('OR', 'Oracle')], default='PG', max_length=5, verbose_name='Type'),
        ),
        migrations.AlterField(
            model_name='scope',
            name='key',
            field=models.CharField(default='tbd', max_length=80, unique=True, verbose_name='key'),
        ),
        migrations.AlterField(
            model_name='user',
            name='client',
            field=models.ForeignKey(blank=True, help_text='If specified, the user may only maintain client-related objects', null=True, on_delete=django.db.models.deletion.PROTECT, to='organization.client'),
        ),
        migrations.AlterField(
            model_name='user',
            name='scopes',
            field=models.ManyToManyField(blank=True, to='organization.scope'),
        ),
        migrations.AlterUniqueTogether(
            name='area',
            unique_together={('application', 'key')},
        ),
    ]
